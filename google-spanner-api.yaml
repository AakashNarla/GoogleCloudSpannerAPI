openapi: 3.0.1
info:
  title: Google Spanner REST API
  description: Spanner REST API for Big Id
  contact:
    name: Aakash Narla
    email: aakash.narla.rao@gmail.com
  license:
    name: Apache License Version 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0'
  version: 1.0.0
servers:
  - url: //localhost:8080/
tags:
  - name: Database
    description: Spanner Database Admin API
  - name: Instance
    description: Spanner Instance API
  - name: Table
    description: Spanner Table Data API
  - name: Table Query
    description: Spanner Table Data Using Query API
paths:
  /v1/spanner/instance/:
    post:
      tags:
        - Instance
      summary: Return All Spanner Instance
      operationId: getAllInstanceUsingPOST
      parameters:
        - name: url
          in: query
          description: url
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully Get All Instance Config
          content:
            '*/*':
              schema:
                type: object
        201:
          description: Created
          content: {}
        401:
          description: You are not authorized to view the resource
          content: {}
        403:
          description: Accessing the resource you were trying to reach is forbidden
          content: {}
        404:
          description: The resource you were trying to reach is not found
          content: {}
      deprecated: false
  /v1/spanner/instance/configs:
    post:
      tags:
        - Instance
      summary: Return All Spanner Instance Config Data
      operationId: getAllInstanceConfigsUsingPOST
      parameters:
        - name: url
          in: query
          description: url
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully Get All Instance Config
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/InstanceConfig'
        201:
          description: Created
          content: {}
        401:
          description: You are not authorized to view the resource
          content: {}
        403:
          description: Accessing the resource you were trying to reach is forbidden
          content: {}
        404:
          description: The resource you were trying to reach is not found
          content: {}
      deprecated: false
  /v1/spanner/instance/create:
    post:
      tags:
        - Instance
      summary: Create new Spanner instance
      operationId: createInstanceUsingPOST
      parameters:
        - name: instance-config
          in: query
          description: instance-config
          required: true
          schema:
            type: string
        - name: instance-name
          in: query
          description: instance-name
          required: true
          schema:
            type: string
        - name: node-count
          in: query
          description: node-count
          required: true
          schema:
            type: integer
            format: int32
        - name: url
          in: query
          description: url
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully created a new instance
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseWrapper'
        201:
          description: Created
          content: {}
        401:
          description: You are not authorized to view the resource
          content: {}
        403:
          description: Accessing the resource you were trying to reach is forbidden
          content: {}
        404:
          description: The resource you were trying to reach is not found
          content: {}
      deprecated: false
  /v1/spanner/instance/{instance-config}/config:
    post:
      tags:
        - Instance
      summary: Return Spanner instance Config
      operationId: getInstanceConfigUsingPOST
      parameters:
        - name: instance-config
          in: path
          description: instance-config
          required: true
          schema:
            type: string
        - name: url
          in: query
          description: url
          required: true
          schema:
            type: string
      responses:
        200:
          description: Instance Config Details
          content:
            '*/*':
              schema:
                type: object
        201:
          description: Created
          content: {}
        401:
          description: You are not authorized to view the resource
          content: {}
        403:
          description: Accessing the resource you were trying to reach is forbidden
          content: {}
        404:
          description: The resource you were trying to reach is not found
          content: {}
      deprecated: false
  /v1/spanner/instance/{instance-id}:
    post:
      tags:
        - Instance
      summary: Return Spanner instance state
      operationId: getInstanceStateUsingPOST
      parameters:
        - name: instance-id
          in: path
          description: instance-id
          required: true
          schema:
            type: string
        - name: url
          in: query
          description: url
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully Return instance state
          content:
            '*/*':
              schema:
                type: object
        201:
          description: Created
          content: {}
        401:
          description: You are not authorized to view the resource
          content: {}
        403:
          description: Accessing the resource you were trying to reach is forbidden
          content: {}
        404:
          description: The resource you were trying to reach is not found
          content: {}
      deprecated: false
  /v1/spanner/instance/{instance-id}/delete:
    delete:
      tags:
        - Instance
      summary: Delete Spanner instance
      operationId: deleteInstanceUsingDELETE
      parameters:
        - name: instance-id
          in: path
          description: instance-id
          required: true
          schema:
            type: string
        - name: url
          in: query
          description: url
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully Deleted Spanner Instance
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseWrapper'
        204:
          description: No Content
          content: {}
        401:
          description: You are not authorized to view the resource
          content: {}
        403:
          description: Accessing the resource you were trying to reach is forbidden
          content: {}
        404:
          description: The resource you were trying to reach is not found
          content: {}
      deprecated: false
  /v1/spanner/instance/{instance-id}/update:
    post:
      tags:
        - Instance
      summary: Update an existing Spanner instance display name and node count
      operationId: updateInstanceUsingPOST
      parameters:
        - name: display-name
          in: query
          description: display-name
          required: true
          schema:
            type: string
        - name: instance-id
          in: path
          description: instance-id
          required: true
          schema:
            type: string
        - name: node-count
          in: query
          description: node-count
          required: true
          schema:
            type: integer
            format: int32
        - name: url
          in: query
          description: url
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully updated instance
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseWrapper'
        201:
          description: Created
          content: {}
        401:
          description: You are not authorized to view the resource
          content: {}
        403:
          description: Accessing the resource you were trying to reach is forbidden
          content: {}
        404:
          description: The resource you were trying to reach is not found
          content: {}
      deprecated: false
  /v1/spanner/{instance-id}/databases/:
    post:
      tags:
        - Database
      summary: Returns list of all databases
      operationId: getDatabasesUsingPOST
      parameters:
        - name: instance-id
          in: path
          description: instance-id
          required: true
          schema:
            type: string
        - name: url
          in: query
          description: url
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully retrieved list
          content:
            '*/*':
              schema:
                type: object
        201:
          description: Created
          content: {}
        401:
          description: You are not authorized to view the resource
          content: {}
        403:
          description: Accessing the resource you were trying to reach is forbidden
          content: {}
        404:
          description: The resource you were trying to reach is not found
          content: {}
      deprecated: false
  /v1/spanner/{instance-id}/databases/create/{database-name}:
    post:
      tags:
        - Database
      summary: Create a Database
      operationId: createDatabaseUsingPOST
      parameters:
        - name: database-name
          in: path
          description: database-name
          required: true
          schema:
            type: string
        - name: instance-id
          in: path
          description: instance-id
          required: true
          schema:
            type: string
        - name: url
          in: query
          description: url
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully Create a database
          content:
            '*/*':
              schema:
                type: object
        201:
          description: Created
          content: {}
        401:
          description: You are not authorized to view the resource
          content: {}
        403:
          description: Accessing the resource you were trying to reach is forbidden
          content: {}
        404:
          description: The resource you were trying to reach is not found
          content: {}
      deprecated: false
  /v1/spanner/{instance-id}/databases/drop/{database-name}:
    delete:
      tags:
        - Database
      summary: Drop a Database
      operationId: dropDatabaseUsingDELETE
      parameters:
        - name: database-name
          in: path
          description: database-name
          required: true
          schema:
            type: string
        - name: instance-id
          in: path
          description: instance-id
          required: true
          schema:
            type: string
        - name: url
          in: query
          description: url
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully Drop a database
          content:
            '*/*':
              schema:
                type: object
        204:
          description: No Content
          content: {}
        401:
          description: You are not authorized to view the resource
          content: {}
        403:
          description: Accessing the resource you were trying to reach is forbidden
          content: {}
        404:
          description: The resource you were trying to reach is not found
          content: {}
      deprecated: false
  /v1/spanner/{instance-id}/databases/{database}/status:
    post:
      tags:
        - Database
      summary: Returns state of a database
      operationId: getDatabaseStateUsingPOST
      parameters:
        - name: database
          in: path
          description: database
          required: true
          schema:
            type: string
        - name: instance-id
          in: path
          description: instance-id
          required: true
          schema:
            type: string
        - name: url
          in: query
          description: url
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully Retrieve database state
          content:
            '*/*':
              schema:
                type: object
        201:
          description: Created
          content: {}
        401:
          description: You are not authorized to view the resource
          content: {}
        403:
          description: Accessing the resource you were trying to reach is forbidden
          content: {}
        404:
          description: The resource you were trying to reach is not found
          content: {}
      deprecated: false
  /v1/spanner/{instance-id}/{database}/query/delete:
    delete:
      tags:
        - Table Query
      summary: Delete the data using query
      operationId: dropDatabaseUsingDELETE_1
      parameters:
        - name: database
          in: path
          description: database
          required: true
          schema:
            type: string
        - name: instance-id
          in: path
          description: instance-id
          required: true
          schema:
            type: string
        - name: query
          in: query
          description: query
          required: true
          schema:
            type: string
        - name: url
          in: query
          description: url
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully deleted records count
          content:
            '*/*':
              schema:
                type: object
        204:
          description: No Content
          content: {}
        401:
          description: You are not authorized to view the resource
          content: {}
        403:
          description: Accessing the resource you were trying to reach is forbidden
          content: {}
        404:
          description: The resource you were trying to reach is not found
          content: {}
      deprecated: false
  /v1/spanner/{instance-id}/{database}/query/get:
    post:
      tags:
        - Table Query
      summary: Get data using Query
      operationId: getTableQueryUsingPOST
      parameters:
        - name: database
          in: path
          description: database
          required: true
          schema:
            type: string
        - name: instance-id
          in: path
          description: instance-id
          required: true
          schema:
            type: string
        - name: query
          in: query
          description: query
          required: true
          schema:
            type: string
        - name: url
          in: query
          description: url
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully Retrieve Data from Table
          content:
            '*/*':
              schema:
                type: object
        201:
          description: Created
          content: {}
        401:
          description: You are not authorized to view the resource
          content: {}
        403:
          description: Accessing the resource you were trying to reach is forbidden
          content: {}
        404:
          description: The resource you were trying to reach is not found
          content: {}
      deprecated: false
  /v1/spanner/{instance-id}/{database}/query/insert:
    post:
      tags:
        - Table Query
      summary: Insert the Data using query
      operationId: insertTableDataQueryUsingPOST
      parameters:
        - name: database
          in: path
          description: database
          required: true
          schema:
            type: string
        - name: instance-id
          in: path
          description: instance-id
          required: true
          schema:
            type: string
        - name: query
          in: query
          description: query
          required: true
          schema:
            type: string
        - name: url
          in: query
          description: url
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully Retrieve Table Insert Count
          content:
            '*/*':
              schema:
                type: object
        201:
          description: Created
          content: {}
        401:
          description: You are not authorized to view the resource
          content: {}
        403:
          description: Accessing the resource you were trying to reach is forbidden
          content: {}
        404:
          description: The resource you were trying to reach is not found
          content: {}
      deprecated: false
  /v1/spanner/{instance-id}/{database}/query/table:
    post:
      tags:
        - Table Query
      summary: Create/Alter/Drop a table in a database
      operationId: alterDatabaseTableUsingPOST
      parameters:
        - name: database
          in: path
          description: database
          required: true
          schema:
            type: string
        - name: instance-id
          in: path
          description: instance-id
          required: true
          schema:
            type: string
        - name: query
          in: query
          description: CREATE TABLE Singers (SingerId   INT64 NOT NULL,  FirstName  STRING(1024),  LastName   STRING(1024),  SingerInfo
            BYTES(MAX)) PRIMARY KEY (SingerId)' OR 'ALTER TABLE Albums ADD COLUMN XXX
            INT64'
          allowEmptyValue: false
          schema:
            type: string
        - name: url
          in: query
          description: url
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully Create/Alter/Drop table
          content:
            '*/*':
              schema:
                type: object
        201:
          description: Created
          content: {}
        401:
          description: You are not authorized to view the resource
          content: {}
        403:
          description: Accessing the resource you were trying to reach is forbidden
          content: {}
        404:
          description: The resource you were trying to reach is not found
          content: {}
      deprecated: false
  /v1/spanner/{instance-id}/{database}/query/update:
    post:
      tags:
        - Table Query
      summary: Update the Data using query
      operationId: updateTableDataUsingQueryUsingPOST
      parameters:
        - name: database
          in: path
          description: database
          required: true
          schema:
            type: string
        - name: instance-id
          in: path
          description: instance-id
          required: true
          schema:
            type: string
        - name: query
          in: query
          description: query
          required: true
          schema:
            type: string
        - name: url
          in: query
          description: url
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully Update the table
          content:
            '*/*':
              schema:
                type: object
        201:
          description: Created
          content: {}
        401:
          description: You are not authorized to view the resource
          content: {}
        403:
          description: Accessing the resource you were trying to reach is forbidden
          content: {}
        404:
          description: The resource you were trying to reach is not found
          content: {}
      deprecated: false
  /v1/spanner/{instance-id}/{database}/{table}/count:
    post:
      tags:
        - Table
      summary: Returns the count of Rows
      operationId: getTableDataCountUsingPOST
      parameters:
        - name: database
          in: path
          description: database
          required: true
          schema:
            type: string
        - name: instance-id
          in: path
          description: instance-id
          required: true
          schema:
            type: string
        - name: table
          in: path
          description: table
          required: true
          schema:
            type: string
        - name: url
          in: query
          description: url
          required: true
          schema:
            type: string
        - name: where-condition
          in: query
          description: '''id > 1'' or ''LIMIT 100'''
          allowEmptyValue: false
          schema:
            type: string
      responses:
        200:
          description: Successfully Retrieve database state
          content:
            '*/*':
              schema:
                type: object
        201:
          description: Created
          content: {}
        401:
          description: You are not authorized to view the resource
          content: {}
        403:
          description: Accessing the resource you were trying to reach is forbidden
          content: {}
        404:
          description: The resource you were trying to reach is not found
          content: {}
      deprecated: false
  /v1/spanner/{instance-id}/{database}/{table}/delete:
    delete:
      tags:
        - Table
      summary: Delete the records as per ids
      operationId: deleteTableUsingDELETE
      parameters:
        - name: database
          in: path
          description: database
          required: true
          schema:
            type: string
        - name: instance-id
          in: path
          description: instance-id
          required: true
          schema:
            type: string
        - name: primary-key
          in: query
          description: primary-key
          required: true
          style: form
          explode: true
          schema:
            type: array
            items:
              type: string
        - name: table
          in: path
          description: table
          required: true
          schema:
            type: string
        - name: url
          in: query
          description: url
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully Delete the Data
          content:
            '*/*':
              schema:
                type: object
        204:
          description: No Content
          content: {}
        401:
          description: You are not authorized to view the resource
          content: {}
        403:
          description: Accessing the resource you were trying to reach is forbidden
          content: {}
        404:
          description: The resource you were trying to reach is not found
          content: {}
      deprecated: false
  /v1/spanner/{instance-id}/{database}/{table}/delete/all:
    delete:
      tags:
        - Table
      summary: Truncate a Table
      operationId: truncateTableUsingDELETE
      parameters:
        - name: database
          in: path
          description: database
          required: true
          schema:
            type: string
        - name: instance-id
          in: path
          description: instance-id
          required: true
          schema:
            type: string
        - name: table
          in: path
          description: table
          required: true
          schema:
            type: string
        - name: url
          in: query
          description: url
          required: true
          schema:
            type: string
      responses:
        200:
          description: Successfully Truncate a database
          content:
            '*/*':
              schema:
                type: object
        204:
          description: No Content
          content: {}
        401:
          description: You are not authorized to view the resource
          content: {}
        403:
          description: Accessing the resource you were trying to reach is forbidden
          content: {}
        404:
          description: The resource you were trying to reach is not found
          content: {}
      deprecated: false
  /v1/spanner/{instance-id}/{database}/{table}/get:
    post:
      tags:
        - Table
      summary: Returns the Data with column name
      operationId: getTableDataUsingPOST
      parameters:
        - name: columns
          in: query
          description: columns
          required: true
          schema:
            type: string
        - name: database
          in: path
          description: database
          required: true
          schema:
            type: string
        - name: instance-id
          in: path
          description: instance-id
          required: true
          schema:
            type: string
        - name: table
          in: path
          description: table
          required: true
          schema:
            type: string
        - name: url
          in: query
          description: url
          required: true
          schema:
            type: string
        - name: where-condition
          in: query
          description: id > 1' or 'LIMIT 100'
          allowEmptyValue: false
          schema:
            type: string
      responses:
        200:
          description: Successfully Retrieve database state
          content:
            '*/*':
              schema:
                type: object
        201:
          description: Created
          content: {}
        401:
          description: You are not authorized to view the resource
          content: {}
        403:
          description: Accessing the resource you were trying to reach is forbidden
          content: {}
        404:
          description: The resource you were trying to reach is not found
          content: {}
      deprecated: false
  /v1/spanner/{instance-id}/{database}/{table}/insert:
    post:
      tags:
        - Table
      summary: Insert the Data
      operationId: insertTableDataUsingPOST
      parameters:
        - name: database
          in: path
          description: database
          required: true
          schema:
            type: string
        - name: instance-id
          in: path
          description: instance-id
          required: true
          schema:
            type: string
        - name: table
          in: path
          description: table
          required: true
          schema:
            type: string
        - name: url
          in: query
          description: url
          required: true
          schema:
            type: string
      requestBody:
        description: requestBody
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/MapÂ«string,stringÂ»'
        required: true
      responses:
        200:
          description: Successfully Insert the data into database
          content:
            application/json:
              schema:
                type: object
        201:
          description: Created
          content: {}
        401:
          description: You are not authorized to view the resource
          content: {}
        403:
          description: Accessing the resource you were trying to reach is forbidden
          content: {}
        404:
          description: The resource you were trying to reach is not found
          content: {}
      deprecated: false
      x-codegen-request-body-name: requestBody
components:
  schemas:
    InstanceConfig:
      title: InstanceConfig
      type: object
      properties:
        displayName:
          type: string
        id:
          $ref: '#/components/schemas/InstanceConfigId'
    InstanceConfigId:
      title: InstanceConfigId
      type: object
      properties:
        instanceConfig:
          type: string
        name:
          type: string
        project:
          type: string
    MapÂ«string,stringÂ»:
      title: MapÂ«string,stringÂ»
      type: object
      additionalProperties:
        type: string
    ResponseWrapper:
      title: ResponseWrapper
      type: object
      properties:
        count:
          type: number
          format: double
        message:
          type: string
        status:
          type: string
